<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.zucc.music.dao.AlbumCommentMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.zucc.music.model.AlbumComment" >
    <id column="album_comment_id" property="albumCommentId" jdbcType="INTEGER" />
    <result column="album_id" property="albumId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="comment_content" property="commentContent" jdbcType="VARCHAR" />
    <result column="comment_time" property="commentTime" jdbcType="TIMESTAMP" />
    <result column="like_count" property="likeCount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    album_comment_id, album_id, user_id, user_name, comment_content, comment_time, like_count
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from album_comment
    where album_comment_id = #{albumCommentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from album_comment
    where album_comment_id = #{albumCommentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.zucc.music.model.AlbumComment" >
    insert into album_comment (album_comment_id, album_id, user_id, 
      user_name, comment_content, comment_time, 
      like_count)
    values (#{albumCommentId,jdbcType=INTEGER}, #{albumId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{commentContent,jdbcType=VARCHAR}, #{commentTime,jdbcType=TIMESTAMP}, 
      #{likeCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.zucc.music.model.AlbumComment" >
    insert into album_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="albumCommentId != null" >
        album_comment_id,
      </if>
      <if test="albumId != null" >
        album_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="commentContent != null" >
        comment_content,
      </if>
      <if test="commentTime != null" >
        comment_time,
      </if>
      <if test="likeCount != null" >
        like_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="albumCommentId != null" >
        #{albumCommentId,jdbcType=INTEGER},
      </if>
      <if test="albumId != null" >
        #{albumId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null" >
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null" >
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likeCount != null" >
        #{likeCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.zucc.music.model.AlbumComment" >
    update album_comment
    <set >
      <if test="albumId != null" >
        album_id = #{albumId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null" >
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null" >
        comment_time = #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likeCount != null" >
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
    </set>
    where album_comment_id = #{albumCommentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.zucc.music.model.AlbumComment" >
    update album_comment
    set album_id = #{albumId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_time = #{commentTime,jdbcType=TIMESTAMP},
      like_count = #{likeCount,jdbcType=INTEGER}
    where album_comment_id = #{albumCommentId,jdbcType=INTEGER}
  </update>
</mapper>