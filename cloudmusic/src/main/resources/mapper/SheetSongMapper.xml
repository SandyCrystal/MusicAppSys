<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.zucc.music.dao.SheetSongMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.zucc.music.model.SheetSong" >
    <id column="sheet_song_id" property="sheetSongId" jdbcType="INTEGER" />
    <result column="sheet_id" property="sheetId" jdbcType="VARCHAR" />
    <result column="song_id" property="songId" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    sheet_song_id, sheet_id, song_id
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from sheet_song
    where sheet_song_id = #{sheetSongId,jdbcType=INTEGER}
  </select>

  <select id="selectBySheetIdSongId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select sheet_song_id
    from sheet_song
    where song_id = #{songId,jdbcType=INTEGER} and sheet_id = #{sheetId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sheet_song
    where sheet_song_id = #{sheetSongId,jdbcType=INTEGER}
  </delete>

  <select id="getSongsBySheetId" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT *
    FROM sheet_song
    WHERE sheet_id = #{sheetId, jdbcType=VARCHAR}
  </select>

  <select id="getMaxSheetSongId" resultType="java.lang.Integer">
    select max(sheet_song_id)
    from sheet_song
  </select>

  <insert id="insert" parameterType="cn.edu.zucc.music.model.SheetSong" >
    insert into sheet_song (sheet_song_id, sheet_id, song_id
      )
    values (#{sheetSongId,jdbcType=INTEGER}, #{sheetId,jdbcType=VARCHAR}, #{songId,jdbcType=VARCHAR}
      )
  </insert>

  <insert id="insertSelective" parameterType="cn.edu.zucc.music.model.SheetSong" >
    insert into sheet_song
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sheetSongId != null" >
        sheet_song_id,
      </if>
      <if test="sheetId != null" >
        sheet_id,
      </if>
      <if test="songId != null" >
        song_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sheetSongId != null" >
        #{sheetSongId,jdbcType=INTEGER},
      </if>
      <if test="sheetId != null" >
        #{sheetId,jdbcType=VARCHAR},
      </if>
      <if test="songId != null" >
        #{songId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.zucc.music.model.SheetSong" >
    update sheet_song
    <set >
      <if test="sheetId != null" >
        sheet_id = #{sheetId,jdbcType=VARCHAR},
      </if>
      <if test="songId != null" >
        song_id = #{songId,jdbcType=VARCHAR},
      </if>
    </set>
    where sheet_song_id = #{sheetSongId,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="cn.edu.zucc.music.model.SheetSong" >
    update sheet_song
    set sheet_id = #{sheetId,jdbcType=VARCHAR},
      song_id = #{songId,jdbcType=VARCHAR}
    where sheet_song_id = #{sheetSongId,jdbcType=INTEGER}
  </update>


</mapper>