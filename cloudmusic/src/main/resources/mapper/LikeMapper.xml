<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.zucc.music.dao.LikeMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.zucc.music.model.Like" >
    <id column="like_id" property="likeId" jdbcType="INTEGER" />
    <result column="like_user_id" property="likeUserId" jdbcType="VARCHAR" />
    <result column="liked_id" property="likedId" jdbcType="VARCHAR" />
    <result column="like_type" property="likeType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    like_id, like_user_id, liked_id, like_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_like
    where like_id = #{likeId,jdbcType=INTEGER}
  </select>

  <select id="findMusicCommentByUserId" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT <include refid="Base_Column_List" /> FROM user_like WHERE like_user_id = #{user_id,jdbcType=VARCHAR} AND like_type = 2
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_like
    where like_id = #{likeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.zucc.music.model.Like" >
    insert into user_like (like_id, like_user_id, liked_id,
      like_type)
    values (#{likeId,jdbcType=INTEGER}, #{likeUserId,jdbcType=VARCHAR}, #{likedId,jdbcType=VARCHAR}, 
      #{likeType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.zucc.music.model.Like" >
    insert into user_like
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="likeId != null" >
        like_id,
      </if>
      <if test="likeUserId != null" >
        like_user_id,
      </if>
      <if test="likedId != null" >
        liked_id,
      </if>
      <if test="likeType != null" >
        like_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="likeId != null" >
        #{likeId,jdbcType=INTEGER},
      </if>
      <if test="likeUserId != null" >
        #{likeUserId,jdbcType=VARCHAR},
      </if>
      <if test="likedId != null" >
        #{likedId,jdbcType=VARCHAR},
      </if>
      <if test="likeType != null" >
        #{likeType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.zucc.music.model.Like" >
    update user_like
    <set >
      <if test="likeUserId != null" >
        like_user_id = #{likeUserId,jdbcType=VARCHAR},
      </if>
      <if test="likedId != null" >
        liked_id = #{likedId,jdbcType=VARCHAR},
      </if>
      <if test="likeType != null" >
        like_type = #{likeType,jdbcType=INTEGER},
      </if>
    </set>
    where like_id = #{likeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.zucc.music.model.Like" >
    update user_like
    set like_user_id = #{likeUserId,jdbcType=VARCHAR},
      liked_id = #{likedId,jdbcType=VARCHAR},
      like_type = #{likeType,jdbcType=INTEGER}
    where like_id = #{likeId,jdbcType=INTEGER}
  </update>
</mapper>