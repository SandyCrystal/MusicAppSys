<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.zucc.advancejava.dao.UserMapper">
  <resultMap id="BaseResultMap" type="cn.edu.zucc.advancejava.model.User">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_pwd" jdbcType="VARCHAR" property="userPwd" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="photo_id" jdbcType="INTEGER" property="photoId" />
    <result column="dynamic_id" jdbcType="INTEGER" property="dynamicId" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
    <result column="song_id" jdbcType="INTEGER" property="songId" />
    <result column="album_id" jdbcType="INTEGER" property="albumId" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, user_pwd, introduction, photo_id, dynamic_id, user_type, song_id, 
    album_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.edu.zucc.advancejava.model.User">
    insert into user (user_id, user_name, user_pwd, 
      introduction, photo_id, dynamic_id, 
      user_type, song_id, album_id
      )
    values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR}, 
      #{introduction,jdbcType=VARCHAR}, #{photoId,jdbcType=INTEGER}, #{dynamicId,jdbcType=INTEGER}, 
      #{userType,jdbcType=INTEGER}, #{songId,jdbcType=INTEGER}, #{albumId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.zucc.advancejava.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPwd != null">
        user_pwd,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="photoId != null">
        photo_id,
      </if>
      <if test="dynamicId != null">
        dynamic_id,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="songId != null">
        song_id,
      </if>
      <if test="albumId != null">
        album_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="photoId != null">
        #{photoId,jdbcType=INTEGER},
      </if>
      <if test="dynamicId != null">
        #{dynamicId,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="songId != null">
        #{songId,jdbcType=INTEGER},
      </if>
      <if test="albumId != null">
        #{albumId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.zucc.advancejava.model.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="photoId != null">
        photo_id = #{photoId,jdbcType=INTEGER},
      </if>
      <if test="dynamicId != null">
        dynamic_id = #{dynamicId,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="songId != null">
        song_id = #{songId,jdbcType=INTEGER},
      </if>
      <if test="albumId != null">
        album_id = #{albumId,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.zucc.advancejava.model.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      photo_id = #{photoId,jdbcType=INTEGER},
      dynamic_id = #{dynamicId,jdbcType=INTEGER},
      user_type = #{userType,jdbcType=INTEGER},
      song_id = #{songId,jdbcType=INTEGER},
      album_id = #{albumId,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>