<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.zucc.advancejava.dao.CommentsMapper">
  <resultMap id="BaseResultMap" type="cn.edu.zucc.advancejava.model.Comments">
    <id column="comment_id" jdbcType="BIGINT" property="commentId" />
    <result column="music_id" jdbcType="BIGINT" property="musicId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="liked_count" jdbcType="INTEGER" property="likedCount" />
    <result column="time" jdbcType="BIGINT" property="time" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="user_img" jdbcType="VARCHAR" property="userImg" />
  </resultMap>
  <sql id="Base_Column_List">
    comment_id, music_id, content, liked_count, time, user_id, nickname, user_img
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comments
    where comment_id = #{commentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from comments
    where comment_id = #{commentId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.edu.zucc.advancejava.model.Comments">
    insert into comments (comment_id, music_id, content, 
      liked_count, time, user_id, 
      nickname, user_img)
    values (#{commentId,jdbcType=BIGINT}, #{musicId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, 
      #{likedCount,jdbcType=INTEGER}, #{time,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{nickname,jdbcType=VARCHAR}, #{userImg,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.zucc.advancejava.model.Comments">
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="musicId != null">
        music_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="likedCount != null">
        liked_count,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="userImg != null">
        user_img,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=BIGINT},
      </if>
      <if test="musicId != null">
        #{musicId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="likedCount != null">
        #{likedCount,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="userImg != null">
        #{userImg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.zucc.advancejava.model.Comments">
    update comments
    <set>
      <if test="musicId != null">
        music_id = #{musicId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="likedCount != null">
        liked_count = #{likedCount,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="userImg != null">
        user_img = #{userImg,jdbcType=VARCHAR},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.zucc.advancejava.model.Comments">
    update comments
    set music_id = #{musicId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      liked_count = #{likedCount,jdbcType=INTEGER},
      time = #{time,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      nickname = #{nickname,jdbcType=VARCHAR},
      user_img = #{userImg,jdbcType=VARCHAR}
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>
</mapper>