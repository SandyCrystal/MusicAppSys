<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.zucc.advancejava.dao.AlbumsMapper">
  <resultMap id="BaseResultMap" type="cn.edu.zucc.advancejava.model.Albums">
    <id column="album_id" jdbcType="BIGINT" property="albumId" />
    <result column="artist_id" jdbcType="BIGINT" property="artistId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="img" jdbcType="VARCHAR" property="img" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.zucc.advancejava.model.Albums">
    <result column="album_introduction" jdbcType="LONGVARCHAR" property="albumIntroduction" />
  </resultMap>
  <sql id="Base_Column_List">
    album_id, artist_id, title, img
  </sql>
  <sql id="Blob_Column_List">
    album_introduction
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from albums
    where album_id = #{albumId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from albums
    where album_id = #{albumId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.edu.zucc.advancejava.model.Albums">
    insert into albums (album_id, artist_id, title, 
      img, album_introduction)
    values (#{albumId,jdbcType=BIGINT}, #{artistId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{img,jdbcType=VARCHAR}, #{albumIntroduction,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.zucc.advancejava.model.Albums">
    insert into albums
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="albumId != null">
        album_id,
      </if>
      <if test="artistId != null">
        artist_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="albumIntroduction != null">
        album_introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="albumId != null">
        #{albumId,jdbcType=BIGINT},
      </if>
      <if test="artistId != null">
        #{artistId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="albumIntroduction != null">
        #{albumIntroduction,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.zucc.advancejava.model.Albums">
    update albums
    <set>
      <if test="artistId != null">
        artist_id = #{artistId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="albumIntroduction != null">
        album_introduction = #{albumIntroduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where album_id = #{albumId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.zucc.advancejava.model.Albums">
    update albums
    set artist_id = #{artistId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      album_introduction = #{albumIntroduction,jdbcType=LONGVARCHAR}
    where album_id = #{albumId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.zucc.advancejava.model.Albums">
    update albums
    set artist_id = #{artistId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR}
    where album_id = #{albumId,jdbcType=BIGINT}
  </update>
</mapper>